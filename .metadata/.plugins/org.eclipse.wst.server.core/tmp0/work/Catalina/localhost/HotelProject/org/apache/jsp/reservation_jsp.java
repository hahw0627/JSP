/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.105
 * Generated at: 2025-05-31 06:54:52 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class reservation_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>숙소 예약</title>\r\n");
      out.write("    <script src=\"https://cdn.tailwindcss.com\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body class=\"bg-gray-100\">\r\n");
      out.write("\r\n");
      out.write("    <!-- 헤더 -->\r\n");
      out.write("    <header class=\"bg-blue-600 text-white text-center py-4 text-2xl font-bold\">\r\n");
      out.write("        <h1>숙소 예약</h1>\r\n");
      out.write("    </header>\r\n");
      out.write("\r\n");
      out.write("    <main class=\"max-w-2xl mx-auto my-8 p-8 bg-white rounded-lg shadow-md\">\r\n");
      out.write("        <form id=\"reservation-form\">\r\n");
      out.write("            <div class=\"mb-4\">\r\n");
      out.write("                <label for=\"name\" class=\"block mb-2 text-sm font-medium text-gray-700\">이름</label>\r\n");
      out.write("                <input type=\"text\" id=\"name\" name=\"name\" required\r\n");
      out.write("                       class=\"w-full p-3 border border-gray-300 rounded-md box-border focus:ring-blue-500 focus:border-blue-500\">\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"mb-4\">\r\n");
      out.write("                <label for=\"email\" class=\"block mb-2 text-sm font-medium text-gray-700\">이메일</label>\r\n");
      out.write("                <input type=\"email\" id=\"email\" name=\"email\" required\r\n");
      out.write("                       class=\"w-full p-3 border border-gray-300 rounded-md box-border focus:ring-blue-500 focus:border-blue-500\">\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"mb-4\">\r\n");
      out.write("                <label for=\"phone\" class=\"block mb-2 text-sm font-medium text-gray-700\">연락처</label>\r\n");
      out.write("                <input type=\"tel\" id=\"phone\" name=\"phone\" required\r\n");
      out.write("                       class=\"w-full p-3 border border-gray-300 rounded-md box-border focus:ring-blue-500 focus:border-blue-500\">\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\r\n");
      out.write("                <div>\r\n");
      out.write("                    <label for=\"checkin\" class=\"block mb-2 text-sm font-medium text-gray-700\">체크인 날짜</label>\r\n");
      out.write("                    <input type=\"date\" id=\"checkin\" name=\"checkin\" required\r\n");
      out.write("                           class=\"w-full p-3 border border-gray-300 rounded-md box-border focus:ring-blue-500 focus:border-blue-500\">\r\n");
      out.write("                </div>\r\n");
      out.write("                <div>\r\n");
      out.write("                    <label for=\"checkout\" class=\"block mb-2 text-sm font-medium text-gray-700\">체크아웃 날짜</label>\r\n");
      out.write("                    <input type=\"date\" id=\"checkout\" name=\"checkout\" required\r\n");
      out.write("                           class=\"w-full p-3 border border-gray-300 rounded-md box-border focus:ring-blue-500 focus:border-blue-500\">\r\n");
      out.write("                </div>\r\n");
      out.write("            </div> \r\n");
      out.write("            <div class=\"mb-4\">\r\n");
      out.write("                <label for=\"guests\" class=\"block mb-2 text-sm font-medium text-gray-700\">인원 수</label>\r\n");
      out.write("                <input type=\"number\" id=\"guests\" name=\"guests\" min=\"1\" required\r\n");
      out.write("                       class=\"w-full p-3 border border-gray-300 rounded-md box-border focus:ring-blue-500 focus:border-blue-500\">\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"mb-6\">\r\n");
      out.write("                <label for=\"room-type\" class=\"block mb-2 text-sm font-medium text-gray-700\">객실 유형</label>\r\n");
      out.write("                <select id=\"room-type\" name=\"room-type\"\r\n");
      out.write("                        class=\"w-full p-3 border border-gray-300 rounded-md box-border focus:ring-blue-500 focus:border-blue-500\">\r\n");
      out.write("                    <option value=\"standard\">스탠다드</option>\r\n");
      out.write("                    <option value=\"deluxe\">디럭스</option>\r\n");
      out.write("                    <option value=\"suite\">스위트</option>\r\n");
      out.write("                </select>\r\n");
      out.write("            </div>\r\n");
      out.write("            <button type=\"submit\"\r\n");
      out.write("                    class=\"w-full bg-green-500 hover:bg-green-600 text-white font-bold py-3 px-6 rounded-md cursor-pointer text-base\">\r\n");
      out.write("                예약 확정\r\n");
      out.write("            </button>\r\n");
      out.write("        </form>\r\n");
      out.write("    </main>\r\n");
      out.write("\r\n");
      out.write("    <footer class=\"text-center mt-8 py-4 text-sm text-gray-600 border-t\">\r\n");
      out.write("        <p>&copy; 2024 숙소 예약 시스템. 모든 권리 보유.</p>\r\n");
      out.write("    </footer>\r\n");
      out.write("\r\n");
      out.write("    <script src=\"js/reservation.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
